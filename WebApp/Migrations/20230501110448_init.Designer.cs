// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(Contexts))]
    [Migration("20230501110448_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApp.Models.AboutClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(6);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("AboutClient");
                });

            modelBuilder.Entity("WebApp.Models.AboutDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("AboutDescription");
                });

            modelBuilder.Entity("WebApp.Models.AboutProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(10);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("EndAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(12);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(11);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("StartAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<string>("WebUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("AboutProject");
                });

            modelBuilder.Entity("WebApp.Models.AboutService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(7);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("AboutService");
                });

            modelBuilder.Entity("WebApp.Models.AboutSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(7);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(11);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("AboutSkill");
                });

            modelBuilder.Entity("WebApp.Models.BlogCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(4);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("BlogCategory");
                });

            modelBuilder.Entity("WebApp.Models.BlogPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(11);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(8);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(15);

                    b.Property<bool>("IsCommentPossible")
                        .HasColumnType("bit")
                        .HasColumnOrder(14);

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit")
                        .HasColumnOrder(13);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(12);

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(9);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(7);

                    b.Property<int>("ViewCount")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("BlogPost");
                });

            modelBuilder.Entity("WebApp.Models.BlogPostComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(8);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(7);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(11);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<int?>("NodeDepth")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("BlogPostComment");
                });

            modelBuilder.Entity("WebApp.Models.BlogPostDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(6);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("BlogPostDetail");
                });

            modelBuilder.Entity("WebApp.Models.BlogSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(5);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("BlogSubCategory");
                });

            modelBuilder.Entity("WebApp.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(13);

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(11);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(19);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(14);

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<string>("FacebookLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(15);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(4);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnOrder(7);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(9);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(3);

                    b.Property<string>("InstagramLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(18);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(21);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(6);

                    b.Property<string>("LinkedInLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(16);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(12);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(20);

                    b.Property<string>("TwitterLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(17);

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("WebApp.Models.ResumeCertification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorityLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<string>("AuthorityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(9);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(14);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("EndAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(13);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(16);

                    b.Property<string>("LicenseNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(10);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(11);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(15);

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("StartAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(12);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ResumeCertification");
                });

            modelBuilder.Entity("WebApp.Models.ResumeEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Activities")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(10);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(14);

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(7);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("EndAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(13);

                    b.Property<double?>("Grade")
                        .HasColumnType("float")
                        .HasColumnOrder(9);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<string>("InstituitionLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<string>("InstituitionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(16);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(11);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(15);

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("StartAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(12);

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ResumeEducation");
                });

            modelBuilder.Entity("WebApp.Models.ResumeFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("Version")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ResumeFile");
                });

            modelBuilder.Entity("WebApp.Models.ResumeTestimony", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(10);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(9);

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(12);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(11);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(7);

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ResumeTestimony");
                });

            modelBuilder.Entity("WebApp.Models.ResumeTraining", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorityLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<string>("AuthorityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(9);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(13);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("EndAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(12);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(15);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(14);

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("StartAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(11);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ResumeTraining");
                });

            modelBuilder.Entity("WebApp.Models.ResumeWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(7);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(12);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(8);

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(11);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(15);

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit")
                        .HasColumnOrder(14);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(13);

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ResumeWork");
                });

            modelBuilder.Entity("WebApp.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(4);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("WebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnOrder(5);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnOrder(7);

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnOrder(6);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(4);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApp.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("WebApp.Models.UserToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedByIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(10);

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("ModifiedByIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(11);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<string>("RevokedByIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(12);

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("WebApp.Models.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrowserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(6);

                    b.Property<string>("BrowserVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<string>("PlatformType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(4);

                    b.Property<string>("PlatformVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(5);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.ToTable("Visitor");
                });

            modelBuilder.Entity("WebApp.Models.AboutClient", b =>
                {
                    b.HasOne("WebApp.Models.Profile", "Profile")
                        .WithMany("AboutClient")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebApp.Models.AboutDescription", b =>
                {
                    b.HasOne("WebApp.Models.Profile", "Profile")
                        .WithMany("AboutDescription")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebApp.Models.AboutProject", b =>
                {
                    b.HasOne("WebApp.Models.Profile", "Profile")
                        .WithMany("AboutProject")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebApp.Models.AboutService", b =>
                {
                    b.HasOne("WebApp.Models.Profile", "Profile")
                        .WithMany("AboutService")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebApp.Models.AboutSkill", b =>
                {
                    b.HasOne("WebApp.Models.Profile", "Profile")
                        .WithMany("AboutSkill")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebApp.Models.BlogPost", b =>
                {
                    b.HasOne("WebApp.Models.BlogCategory", "BlogCategory")
                        .WithMany("BlogPost")
                        .HasForeignKey("CategoryId");

                    b.HasOne("WebApp.Models.Profile", "Profile")
                        .WithMany("BlogPost")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Models.BlogSubCategory", "BlogSubCategory")
                        .WithMany("BlogPost")
                        .HasForeignKey("SubCategoryId");

                    b.Navigation("BlogCategory");

                    b.Navigation("BlogSubCategory");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebApp.Models.BlogPostComment", b =>
                {
                    b.HasOne("WebApp.Models.BlogPost", "BlogPost")
                        .WithMany("BlogPostComment")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogPost");
                });

            modelBuilder.Entity("WebApp.Models.BlogPostDetail", b =>
                {
                    b.HasOne("WebApp.Models.BlogPost", "BlogPost")
                        .WithMany("BlogPostDetail")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogPost");
                });

            modelBuilder.Entity("WebApp.Models.BlogSubCategory", b =>
                {
                    b.HasOne("WebApp.Models.BlogCategory", "BlogCategory")
                        .WithMany("BlogSubCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogCategory");
                });

            modelBuilder.Entity("WebApp.Models.ResumeCertification", b =>
                {
                    b.HasOne("WebApp.Models.Profile", "Profile")
                        .WithMany("ResumeCertification")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebApp.Models.ResumeEducation", b =>
                {
                    b.HasOne("WebApp.Models.Profile", "Profile")
                        .WithMany("ResumeEducation")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebApp.Models.ResumeFile", b =>
                {
                    b.HasOne("WebApp.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebApp.Models.ResumeTestimony", b =>
                {
                    b.HasOne("WebApp.Models.Profile", "Profile")
                        .WithMany("ResumeTestimony")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebApp.Models.ResumeTraining", b =>
                {
                    b.HasOne("WebApp.Models.Profile", "Profile")
                        .WithMany("ResumeTraining")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebApp.Models.ResumeWork", b =>
                {
                    b.HasOne("WebApp.Models.Profile", "Profile")
                        .WithMany("ResumeWork")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebApp.Models.UserRole", b =>
                {
                    b.HasOne("WebApp.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApp.Models.UserToken", b =>
                {
                    b.HasOne("WebApp.Models.User", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApp.Models.BlogCategory", b =>
                {
                    b.Navigation("BlogPost");

                    b.Navigation("BlogSubCategory");
                });

            modelBuilder.Entity("WebApp.Models.BlogPost", b =>
                {
                    b.Navigation("BlogPostComment");

                    b.Navigation("BlogPostDetail");
                });

            modelBuilder.Entity("WebApp.Models.BlogSubCategory", b =>
                {
                    b.Navigation("BlogPost");
                });

            modelBuilder.Entity("WebApp.Models.Profile", b =>
                {
                    b.Navigation("AboutClient");

                    b.Navigation("AboutDescription");

                    b.Navigation("AboutProject");

                    b.Navigation("AboutService");

                    b.Navigation("AboutSkill");

                    b.Navigation("BlogPost");

                    b.Navigation("ResumeCertification");

                    b.Navigation("ResumeEducation");

                    b.Navigation("ResumeTestimony");

                    b.Navigation("ResumeTraining");

                    b.Navigation("ResumeWork");
                });

            modelBuilder.Entity("WebApp.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("WebApp.Models.User", b =>
                {
                    b.Navigation("Tokens");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
